▼Ruby
オブジェクト指向スクリプト言語
Perlの影響（余計なグローバル変数。。）

楽しくプログラミングできること、自由に、自由度高い
例：Pythonはきっちり
プログラミング言語としての新規性なし
パフォーマンス重視していない
次Ruby2.6
今後Ruby3.0 (2.0のパフォーマンスの2倍目指す)

スクリプト言語
中間言語をVMで実行
例：PHP
コンパイル不要
REPL(irb) インタラクティブにトライアンドエラーでコード実行できる
プログラム実行速度遅い
ソーシャルゲームには向かない(スピード求められるアプリ)
Airbnb
プログラム実行するまでエラー検出できない

オブジェクト指向言語
String、True、Nil(Null)…すべてオブジェクト
変数に代入できるもの

10.times { puts “” }
For文使わず直感的なコードかける

インタラクティブコードの終了
$ irb
> exit

オープンクラス
クラスを容易に拡張できる仕組み
class Fixnum にメソッド追加できる
ライブラリの不具合直せてしまう(逆に怖い)モンキーパッチ

▼Ruby on Rails
Rubyで作られているフレームワーク
DHH
37signals「小さなチーム、大きな仕事：37シグナルズの～」
スタートアップ企業に使われる

アプリ開発高速に
ツール選定手間省く

XSS
SQLインジェクション
CXRF
などのセキュリティ脆弱性防げる

オープンソースのフレームワーク
情報豊富

Rails使用
GitHub, Airbnb, クックパッド, GitLab
初期Twitter(パフォーマンスの関係で) -> scala

「驚き最小限の原則」Matz
「満面の笑みの原則」DHH

設定より規約を重視する
DBのテーブル名や主キーの名称は規約で決まっている
ex. User -> users

安定性より進歩重視
後方互換性を捨てて進歩

規約に従うことにより本質から外れた作業を減らす
シンプルなソースで、楽しくプログラミング
