2018/07/28
Progate
Ruby

puts で出力
型がない
数値を代入したら数値として扱われる
例：
number = 10
puts number + 3
#上記で表示されるのは、13
;(セミコロン)はいらない

変数名は自由に決めることができますが、
Rubyではいくつか命名のルールがあります。
特に、2語以上を組み合わせた変数名をつけるときは、
アンダーバー（_）を用いるということは覚えておきましょう。

x = x + 10
x += 10

変数の値を文字列の中に含める方法があります。
下図のように文字列の中で、#{変数名}とすることで、
変数を代入している値に置き換えて、文字列に含めることができます。
これを「変数展開」と呼びます。
変数展開をする際は注意点があります。
実はダブルクォーテーションを使った文字列の場合しか変数展開はされません。
シングルクォーテーションの場合は、
変数展開が行われず、そのまま文字列として出力されてしまうので注意しましょう。

例：
name = "佐藤"
puts "こんにちは#{name}さん"
-> こんにちは佐藤さん

puts 'こんにちは#{name}さん'
-> こんにちは#{name}さん

変数展開は文字列の連結と役割としては同じですが、1つ異なる点があります。
実は左の図のように、数値と文字列を足し算で連結することはできません。
しかし右の図のように変数展開を用いると、
数値の入った変数も問題なく文字列に含めることが可能です。
変数を文字列に含める場合は、基本的に変数展開を使うようにしましょう。

★Javaみたいに文字列と数値を連結することはできない！

age = 19
puts  "#{age}歳です"
-> 19歳です

score = 94
puts score > 80
-> true

★Javaとは違い、文字列の比較でもそのまま==を使える！

if
elsif
else
end

elsifは必要な数だけ並べることができますが、複数の条件に合致したとしても、
実行されるのは最初に合致した条件の処理のみです。
そのため条件の順番を間違えると、期待した分岐がなされないことがあります。

配列も型なし
names = ["Suzuki","Kato","Sato"]
puts names
->
Suzuki
Kato
Sato

ここで有料！
